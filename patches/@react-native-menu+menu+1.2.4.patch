diff --git a/node_modules/@react-native-menu/menu/android/.DS_Store b/node_modules/@react-native-menu/menu/android/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/node_modules/@react-native-menu/menu/android/.DS_Store differ
diff --git a/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuView.kt b/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuView.kt
index 17ed7c6..c45f5cc 100644
--- a/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuView.kt
+++ b/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuView.kt
@@ -24,6 +24,11 @@ class MenuView(private val mContext: ReactContext) : ReactViewGroup(mContext) {
   private var mIsOnLongPress = false
   private var mGestureDetector: GestureDetector
   private var mHitSlopRect: Rect? = null
+    set(value) {
+      super.hitSlopRect = value
+      mHitSlopRect = value
+      updateTouchDelegate()
+    }
 
   init {
     mGestureDetector = GestureDetector(mContext, object : GestureDetector.SimpleOnGestureListener() {
@@ -47,12 +52,6 @@ class MenuView(private val mContext: ReactContext) : ReactViewGroup(mContext) {
     prepareMenu()
   }
 
-  override fun setHitSlopRect(rect: Rect?) {
-    super.setHitSlopRect(rect)
-    mHitSlopRect = rect
-    updateTouchDelegate()
-  }
-
   override fun onInterceptTouchEvent(ev: MotionEvent): Boolean {
     return true
   }
diff --git a/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuViewManagerBase.kt b/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuViewManagerBase.kt
index 4731e1a..e4d2743 100644
--- a/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuViewManagerBase.kt
+++ b/node_modules/@react-native-menu/menu/android/src/main/java/com/reactnativemenu/MenuViewManagerBase.kt
@@ -123,9 +123,9 @@ abstract class MenuViewManagerBase : ReactClippingViewManager<MenuView>() {
   fun setHitSlop(view: ReactViewGroup, @Nullable hitSlop: ReadableMap?) {
     if (hitSlop == null) {
       // We should keep using setters as `Val cannot be reassigned`
-      view.setHitSlopRect(null)
+      view.hitSlopRect = null
     } else {
-      view.setHitSlopRect(
+      view.hitSlopRect = (
               Rect(
                       if (hitSlop.hasKey("left"))
                               PixelUtil.toPixelFromDIP(hitSlop.getDouble("left")).toInt()
@@ -206,7 +206,7 @@ abstract class MenuViewManagerBase : ReactClippingViewManager<MenuView>() {
 
   @ReactProp(name = ViewProps.OVERFLOW)
   fun setOverflow(view: ReactViewGroup, overflow: String?) {
-    view.setOverflow(overflow)
+    view.overflow = overflow
   }
 
   @ReactProp(name = "backfaceVisibility")
